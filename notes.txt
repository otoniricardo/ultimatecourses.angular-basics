commit: [Component Architecture]: Create child feature module
    - how to create a new module using the cli: 
        npx ng g admin --module=app.module
            => npx ng: use angular cli.
            => g: short for generate.
            => admin: module name.
            => --module=app.module: make new module auto import in app module.
    - about the generated module file:
        @NgModule() decorator:
            => declare any component that is used in the module
            => imports CommonModule, whic contains the angular features and directives
    
commit: [Component Architecture]: Create a smart container component
    - hot to generate a new component:
        npx ng g component admin/containers/donut-list --dry-run
            => admin/containers/donut-list: the path for the new component files.
            => --dry-run: show what the command will do but doesnot make any changes.
               have to run the command again without this flag so the component
               is really generated.
    - need to export the DonutListComponent from the AdminModule

commit: [Component Architecture]: Use the NgOnInit lifecycle Hook
    - use the ngOnInit func to initiate not static data(data that gets fetched);
    - use the | json in the template: {{ donut | json }} in template does the 
    same as JSON.stringfy(donut) in the .ts and {{ donut }} in template;

commit: [Component Architecture]: Type definitions with interfaces
    - how to create a interface with the cli:
        npx ng g interface admin/models/Donut model
            => the [space] model at the end of the command appends .model to the
            name of the file;
    - interfaces dont get compiled to js, its is just a virtual check;
